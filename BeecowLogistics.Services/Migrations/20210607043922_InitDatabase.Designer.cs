// <auto-generated />
using System;
using BeecowLogistics.Services.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BeecowLogistics.Services.Migrations
{
    [DbContext(typeof(BeecowLogisticContext))]
    [Migration("20210607043922_InitDatabase")]
    partial class InitDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BeecowLogistics.Services.Entities.ChildRoute", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<string>("Code")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastSavedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastSavedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Length")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimeEnd")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("TimeStart")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("ChildRoute");
                });

            modelBuilder.Entity("BeecowLogistics.Services.Entities.Delivery", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastSavedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastSavedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Delivery");
                });

            modelBuilder.Entity("BeecowLogistics.Services.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<decimal>("Codamount")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("CODAmount");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("Codfee")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("CODFee");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentPosition")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("DeliveryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeliveryID");

                    b.Property<string>("Descriptions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCod")
                        .HasColumnType("bit")
                        .HasColumnName("IsCOD");

                    b.Property<bool>("IsForRent")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastSavedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastSavedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("PackageHeight")
                        .HasColumnType("float");

                    b.Property<double?>("PackageLength")
                        .HasColumnType("float");

                    b.Property<Guid>("PackageTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PackageTypeID");

                    b.Property<double?>("PackageWeight")
                        .HasColumnType("float");

                    b.Property<double?>("PackageWidth")
                        .HasColumnType("float");

                    b.Property<string>("PayBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("PaymentTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PaymentTypeID");

                    b.Property<string>("ReceiverAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiverCity")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ReceiverDistrict")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ReceiverName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ReceiverPhone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ReceiverStreet")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ReceiverWard")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("RouteId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("RouteID");

                    b.Property<string>("SenderAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SenderCity")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SenderDistrict")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SenderName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SenderPhone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SenderStreet")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SenderWard")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("ShippingFee")
                        .HasColumnType("decimal(18,0)");

                    b.Property<Guid?>("SpecialOptionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SpecialOptionID");

                    b.Property<Guid?>("StationForRentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("StationForRentID");

                    b.Property<Guid>("StationId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("StationID");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("Tax")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal>("TotalFee")
                        .HasColumnType("decimal(18,0)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserID");

                    b.HasKey("Id");

                    b.HasIndex("DeliveryId");

                    b.HasIndex("PackageTypeId");

                    b.HasIndex("PaymentTypeId");

                    b.HasIndex("RouteId");

                    b.HasIndex("SpecialOptionId");

                    b.HasIndex("StationForRentId");

                    b.HasIndex("StationId");

                    b.HasIndex("UserId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("BeecowLogistics.Services.Entities.PackageType", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastSavedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastSavedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("PackageType");
                });

            modelBuilder.Entity("BeecowLogistics.Services.Entities.PaymentType", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastSavedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastSavedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("PaymentType");
                });

            modelBuilder.Entity("BeecowLogistics.Services.Entities.Route", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<string>("ChildRoutes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastSavedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastSavedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RouteName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Routing")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ShippingFeeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ShippingFeeID");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimeEnd")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("TimeStart")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("ShippingFeeId");

                    b.ToTable("Route");
                });

            modelBuilder.Entity("BeecowLogistics.Services.Entities.ShippingFee", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastSavedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastSavedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ShippingFee");
                });

            modelBuilder.Entity("BeecowLogistics.Services.Entities.ShippingFeeDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<string>("Additional")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Height")
                        .HasColumnType("float");

                    b.Property<DateTime>("LastSavedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastSavedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Length")
                        .HasColumnType("float");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,0)");

                    b.Property<Guid>("ShippingFeeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ShippingFeeID");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UnitPrice")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.Property<double>("Width")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ShippingFeeId");

                    b.ToTable("ShippingFeeDetail");
                });

            modelBuilder.Entity("BeecowLogistics.Services.Entities.SpecialOption", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastSavedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastSavedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("SpecialOption");
                });

            modelBuilder.Entity("BeecowLogistics.Services.Entities.Station", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("District")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsForRent")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastSavedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastSavedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("StationTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("StationTypeID");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Ward")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("StationTypeId");

                    b.ToTable("Station");
                });

            modelBuilder.Entity("BeecowLogistics.Services.Entities.StationType", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastSavedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastSavedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("StationType");
                });

            modelBuilder.Entity("BeecowLogistics.Services.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DoB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastSavedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastSavedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<bool>("PhoneConfirmed")
                        .HasColumnType("bit");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<Guid?>("UserTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserTypeID");

                    b.HasKey("Id");

                    b.HasIndex("UserTypeId");

                    b.HasIndex(new[] { "Phone" }, "UQ__Users__5C7E359E8161FDC9")
                        .IsUnique();

                    b.ToTable("User");
                });

            modelBuilder.Entity("BeecowLogistics.Services.Entities.UserType", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastSavedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastSavedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserType");
                });

            modelBuilder.Entity("BeecowLogistics.Services.Entities.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastSavedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastSavedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("StationId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("StationID");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("WorkingDays")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("StationId");

                    b.ToTable("Vehicle");
                });

            modelBuilder.Entity("BeecowLogistics.Services.Entities.VehicleRoute", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastSavedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastSavedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RouteId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("RouteID");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("VehicleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("VehicleID");

                    b.HasKey("Id");

                    b.HasIndex("RouteId");

                    b.HasIndex("VehicleId");

                    b.ToTable("VehicleRoute");
                });

            modelBuilder.Entity("BeecowLogistics.Services.Entities.Order", b =>
                {
                    b.HasOne("BeecowLogistics.Services.Entities.Delivery", "Delivery")
                        .WithMany("Orders")
                        .HasForeignKey("DeliveryId")
                        .HasConstraintName("FK_Order_Delivery")
                        .IsRequired();

                    b.HasOne("BeecowLogistics.Services.Entities.PackageType", "PackageType")
                        .WithMany("Orders")
                        .HasForeignKey("PackageTypeId")
                        .HasConstraintName("FK_Order_PackageType")
                        .IsRequired();

                    b.HasOne("BeecowLogistics.Services.Entities.PaymentType", "PaymentType")
                        .WithMany("Orders")
                        .HasForeignKey("PaymentTypeId")
                        .HasConstraintName("FK_Order_PaymentType")
                        .IsRequired();

                    b.HasOne("BeecowLogistics.Services.Entities.Route", "Route")
                        .WithMany("Orders")
                        .HasForeignKey("RouteId")
                        .HasConstraintName("FK_Order_Route")
                        .IsRequired();

                    b.HasOne("BeecowLogistics.Services.Entities.SpecialOption", "SpecialOption")
                        .WithMany("Orders")
                        .HasForeignKey("SpecialOptionId")
                        .HasConstraintName("FK_Order_SpecialOption");

                    b.HasOne("BeecowLogistics.Services.Entities.Station", "StationForRent")
                        .WithMany("OrderStationForRents")
                        .HasForeignKey("StationForRentId")
                        .HasConstraintName("FK_Order_Station1");

                    b.HasOne("BeecowLogistics.Services.Entities.Station", "Station")
                        .WithMany("OrderStations")
                        .HasForeignKey("StationId")
                        .HasConstraintName("FK_Order_Station")
                        .IsRequired();

                    b.HasOne("BeecowLogistics.Services.Entities.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Order_User");

                    b.Navigation("Delivery");

                    b.Navigation("PackageType");

                    b.Navigation("PaymentType");

                    b.Navigation("Route");

                    b.Navigation("SpecialOption");

                    b.Navigation("Station");

                    b.Navigation("StationForRent");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BeecowLogistics.Services.Entities.Route", b =>
                {
                    b.HasOne("BeecowLogistics.Services.Entities.ShippingFee", "ShippingFee")
                        .WithMany("Routes")
                        .HasForeignKey("ShippingFeeId")
                        .HasConstraintName("FK_Route_ShippingFee");

                    b.Navigation("ShippingFee");
                });

            modelBuilder.Entity("BeecowLogistics.Services.Entities.ShippingFeeDetail", b =>
                {
                    b.HasOne("BeecowLogistics.Services.Entities.ShippingFee", "ShippingFee")
                        .WithMany("ShippingFeeDetails")
                        .HasForeignKey("ShippingFeeId")
                        .HasConstraintName("FK_ShippingFeeDetail_ShippingFee")
                        .IsRequired();

                    b.Navigation("ShippingFee");
                });

            modelBuilder.Entity("BeecowLogistics.Services.Entities.Station", b =>
                {
                    b.HasOne("BeecowLogistics.Services.Entities.StationType", "StationType")
                        .WithMany("Stations")
                        .HasForeignKey("StationTypeId")
                        .HasConstraintName("FK_Station_StationType")
                        .IsRequired();

                    b.Navigation("StationType");
                });

            modelBuilder.Entity("BeecowLogistics.Services.Entities.User", b =>
                {
                    b.HasOne("BeecowLogistics.Services.Entities.UserType", "UserType")
                        .WithMany("Users")
                        .HasForeignKey("UserTypeId")
                        .HasConstraintName("FK_User_UserType");

                    b.Navigation("UserType");
                });

            modelBuilder.Entity("BeecowLogistics.Services.Entities.Vehicle", b =>
                {
                    b.HasOne("BeecowLogistics.Services.Entities.Station", "Station")
                        .WithMany("Vehicles")
                        .HasForeignKey("StationId")
                        .HasConstraintName("FK_Vehicle_Station");

                    b.Navigation("Station");
                });

            modelBuilder.Entity("BeecowLogistics.Services.Entities.VehicleRoute", b =>
                {
                    b.HasOne("BeecowLogistics.Services.Entities.Route", "Route")
                        .WithMany("VehicleRoutes")
                        .HasForeignKey("RouteId")
                        .HasConstraintName("FK_VehicleRoute_Route")
                        .IsRequired();

                    b.HasOne("BeecowLogistics.Services.Entities.Vehicle", "Vehicle")
                        .WithMany("VehicleRoutes")
                        .HasForeignKey("VehicleId")
                        .HasConstraintName("FK_VehicleRoute_Vehicle")
                        .IsRequired();

                    b.Navigation("Route");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("BeecowLogistics.Services.Entities.Delivery", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("BeecowLogistics.Services.Entities.PackageType", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("BeecowLogistics.Services.Entities.PaymentType", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("BeecowLogistics.Services.Entities.Route", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("VehicleRoutes");
                });

            modelBuilder.Entity("BeecowLogistics.Services.Entities.ShippingFee", b =>
                {
                    b.Navigation("Routes");

                    b.Navigation("ShippingFeeDetails");
                });

            modelBuilder.Entity("BeecowLogistics.Services.Entities.SpecialOption", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("BeecowLogistics.Services.Entities.Station", b =>
                {
                    b.Navigation("OrderStationForRents");

                    b.Navigation("OrderStations");

                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("BeecowLogistics.Services.Entities.StationType", b =>
                {
                    b.Navigation("Stations");
                });

            modelBuilder.Entity("BeecowLogistics.Services.Entities.User", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("BeecowLogistics.Services.Entities.UserType", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("BeecowLogistics.Services.Entities.Vehicle", b =>
                {
                    b.Navigation("VehicleRoutes");
                });
#pragma warning restore 612, 618
        }
    }
}
